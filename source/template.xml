<?xml version="1.0" encoding="utf-8"?>
<Template>


<Fragment id="app">
<Interface><![CDATA[
  <header class="grapher-header">
     <nav style="padding: 5px 5px; margin-top: 18px; float: right; text-align: right;">
       <a id="project-btn">Project</a>
       <a id="api-btn" href="api.html">API Documentation</a>
     </nav>
     <img src="images/top.png" />
  </header>
  
  <section class="grapher-body">
    <table style="width:100%" cellpadding="3px">
      <tr>
        <td class="grapher-menu"></td>
        <td class="grapher-main"></td>
      </tr>
    </table> 
  </section>
  
  <footer class="grapher-footer"></footer>
  <div id="menu-app" class="positionable">
    <ul>
      <li id="new-project-btn"><span class="ui-icon ui-icon-document"></span>New Project ...</li>
      <li id="projects-btn"><span class="ui-icon ui-icon-folder-open"></span>Open Project ...</li>
      <li id="close-project-btn"><span class="ui-icon ui-icon-circle-close"></span>Close Project</li>
      <li class="ui-widget-content ui-menu-divider"></li>
      <li id="scrubber-btn"><span class="ui-icon ui-icon-wrench"></span>Debugger</li>
      <li id="clear-btn"><span class="ui-icon ui-icon-scissors"></span>Clean diagram</li>
      <li id="source-svg-btn"><span class="ui-icon ui-icon-script"></span>View file SVG</li>
      <li id="source-paint-btn"><span class="ui-icon ui-icon-lightbulb"></span>Source PaintPsi</li>
    </ul>
  </div>
]]></Interface>
<Script arguments="interface, psi">
  <![CDATA[
  //Administración de botones deproyecto
  $("#menu-app li").click(function(){
    switch($(this).attr("id")){
      case "new-project-btn": 
        if (GrapherApp.newProjectDialog)
          GrapherApp.projectsDialog.dialog("open").find(".message").hide();
        else
          UserInterface.process("newProject", $("body"), "appendTo", this.app); break;
      case "projects-btn": 
        if (GrapherApp.projectsDialog!=null)
          GrapherApp.projectsDialog.dialog("open").find(".message").hide();
        else
          UserInterface.process("projects", $("body"), "appendTo", this.app); 
        break;
      case "close-project-btn": GrapherApp.closeProject(); break;
      case "scrubber-btn": PsiOut.console.openDebugger(); break;
      case "source-paint-btn": GrapherApp.currentPaint(); break;
      case "clear-btn": 
        $(">g",GrapherApp.manager.svgroot).remove(); 
        $(">defs",GrapherApp.manager.svgroot).children().remove();
        GrapherApp.manager.removeAllElements();
        break;
      case "source-svg-btn": UserInterface.process("sourceSVG", $("body"), "appendTo", {}); break;
    }
    $("#menu-app").hide();
  }).each(function(){ this.app = psi });
  $("#menu-app ul").menu();
  $("#menu-app").hide();

  // Botón ver API Documentation
  $("#project-btn")
    .button({icons: {primary: "ui-icon-folder-open", secondary: "ui-icon-triangle-1-s"}})
    .click(function(){ 
      $("#menu-app")
        .toggle()
        .position({ of: $(this), my: "right top", at: "right-5 bottom+2", collision: "flip flip" });
    });
    
   // Botón ver API Documentation
   $("#api-btn",interface)
    .button({icons: {primary: "ui-icon-folder-open"}});
]]></Script>
</Fragment>

  
<Fragment id="menu">
<Interface><![CDATA[
  <section class="ui-tabs ui-widget ui-widget-content ui-corner-all">
    <div id="project-alias" class="ui-widget-header ui-corner-all grapher-title">[Project Alias]</div>
    <div id="menu">
      <div class="group">
        <h3 style="background-color: #B3D1FF;">PsiGraphs</h3>
        <div id="menu-graphs" class="grapher-section"></div>
      </div>
      <div class="group">
        <h3 style="background-color: #FFF2B3;">PsiPaint</h3>
        <div id="menu-paints" class="grapher-section"></div>
      </div>
      <div class="group">
        <h3 style="background-color: #CBCBCB;">Data</h3>
        <div id="menu-data" class="grapher-section"></div>
      </div>
    </div>
  </section>
]]></Interface>
<Script arguments="interface, psi"><![CDATA[
  //Crear submenus
  UserInterface.process("openFiles", $("#menu-graphs"), "appendTo", {ftype: "graphs"});
  UserInterface.process("openFiles", $("#menu-paints"), "appendTo", {ftype: "paints"});
  UserInterface.process("openFiles", $("#menu-data"), "appendTo", {ftype: "data"});
]]></Script>
</Fragment>
  

<Fragment id="main">
<Interface><![CDATA[
  <section class="ui-tabs ui-widget ui-widget-content ui-corner-all">
    <div class="ui-widget-header ui-corner-all grapher-title">Psi Diagrams</div>
    <div id="diagram"></div>
  </section>
]]></Interface>
<Script arguments="interface, psi"><![CDATA[
  //Crear administrador del graficador Psi
  psi.manager = new GrapherManager( $("#diagram", interface) );  
]]></Script>
</Fragment>


<Fragment id="newProject">
<Interface><![CDATA[
  <div id="new-project">
    <table cellpadding="3" cellspacing="0" border="0" width="98%">
      <tr>
        <td style="width:10%"><b>Alias</b>:</td>
        <td><input type="text" name="alias" placeholder="Alias project ..." value="" size="20" max="20" required="required" class="ui-corner-all"/></td>  
      </tr>
      <tr>
        <td style="width:10%; vertical-align: top;"><b>Nota</b>:</td>
        <td>
          The project will create three subdirectories: <br/>
          * <b>graph</b>: subirectorio for creating graphical library.<br/>
          * <b>paint</b>: Subdirectory for creating figures and models.<br/>
          * <b>data</b>: Subirectorio for creating XML files.<br/>
        </td>  
      </tr>
    </table>
    <div id="message" class="ui-state-highlight ui-corner-all" style="margin-top: 5px; padding:.5em; display: none;">
      <span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span>
      <strong>Alerta:</strong> <span id="text"></span>
    </div>
  </div>
]]></Interface>
<Script arguments="interface, psi"><![CDATA[
  //Definir tabla
  psi.newProjectDialog = interface.dialog({
    title: "New Project", 
    width: 500, 
    grapher: psi,
    buttons: {
      "Create": function(event, ui){
        var grapher = $(this).dialog("option", "grapher"),
            alias = $("[name=alias]", this).val();
        $("#message", this).removeClass("ui-state-error").show();
        try {
          $("#text", this).text( grapher.newProject(alias));
          GrapherApp.openProject(alias);
          $(this).dialog("close");
        }
        catch(e) { 
          $("#message", this).addClass("ui-state-error");
          $("#text", this).text(e.toString()); 
        }
      },
      "Cancelar": function(event, ui){ $(this).dialog("close"); }
    },
    close: function() { $(this).dialog("close"); } 
  });
]]></Script>
</Fragment> 


  
<Fragment id="projects">
<Interface><![CDATA[
  <section id="projects-dialog">
    <div id="message" class="ui-state-highlight ui-corner-all" style="margin-top: 5px; padding:.5em; display: none;">
      <span class="ui-icon ui-icon-close message-close" style="cursor:pointer; display:inline-block;float: right" alt="Cerrar"></span>
      <span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span>
      <strong>Alert:</strong> <span id="text"></span>
    </div>
    <div id="projects">
      <table cellpadding="0" cellspacing="0" border="0" class="projects"> </table> 
    </div>
  </section>
]]></Interface>
<Script arguments="interface, psi"><![CDATA[
  //Definir tabla
  var cols = [{sTitle: "Alias", sClass: "alias"}, {sClass: "button", asSorting: false}],
      table = $("table.projects", interface).dataTable( $.extend({aoColumns: cols},tableDef) );
  psi.projectsDialog = interface.dialog({
    title: "Projects Grapher", width: 350, table: table, grapher: psi, message: $("div#message",interface),
    open: function(event, ui){
      var grapher = $(this).dialog("option", "grapher"),
          message = $(this).dialog("option", "message"),
          fclick = function(){
            debugger;
            var tr = $(this).parents("tr:first").get(0),
                data = this.table.fnGetData(tr);
            try {
              if (this.action=="delete" && !confirm("Want to delete project: "+data[0])) return;
              this.message.removeClass("ui-state-error").show();
              this.message.find("#text").text( this.grapher.Project[this.action](data[0]) );
              if (this.action=="delete")
                this.table.fnDeleteRow( tr._DT_RowIndex );
              if (this.action=="open"){
                var self = $(this);
                setTimeout(function(){ GrapherApp.projectsDialog.dialog("close"); }, 1000);
              }
            }
            catch(e) { 
              this.message.addClass("ui-state-error");
              this.message.find("#text").text(e.toString()); 
            }
          };

      //Obtener lista de proyectos
      grapher.getProjects( $("table.projects", this).dataTable() );
      
      $(".message-close", this).click(function(){ $(this).parent().hide(); });
      $("button.edit", this)
        .button({icons: {primary: "ui-icon-tag"}, text: false})
        .each(function(){ this.message = message; this.grapher = grapher; this.table = table; this.action = "open"; })
        .click(fclick); 

      $("button.delete", this)
        .button({icons: {primary: "ui-icon-trash"}, text: false})
        .each(function(){ this.message = message; this.grapher = grapher; this.table = table; this.action = "delete"; })
        .click(fclick); 
    } 
  });
]]></Script>
</Fragment>



<Fragment id="openFiles">
<Interface><![CDATA[
  <div class="openFiles">
    <div id="message" class="ui-state-highlight ui-corner-all" style="margin-top: 0px; padding:.2em; display: none;">
      <span class="ui-icon ui-icon-close message-close" style="cursor:pointer; display:inline-block;float: right" alt="Close"></span>
      <span class="ui-icon ui-icon-info" style="float: left; margin-right: .3em;"></span>
      <strong>Alert:</strong> <span id="text"></span>
    </div>
    <nav>
       <input type="text" name="alias" value="" placeholder="Name[.xml]" style="width:110px;padding:2px;"/>
       <button id="new-file" style="cursor:pointer;">New</button>
    </nav>
    <table cellpadding="0" cellspacing="0" border="0" class="files">
    </table>
  </div>  
]]></Interface>
<Script arguments="interface, psi">
  <![CDATA[
  var cols = psi.ftype=="data"
           ? [{sTitle: "File", sClass: "file"}, {sClass: "button", asSorting: false, sWidth: "30px"}]
           : [{sTitle: "File", sClass: "file"}, {sTitle: "<span class='ui-icon ui-icon-gear'></span>", sClass: "run", sWidth: "20px", asSorting: false}, {sClass: "button", asSorting: false, sWidth: "30px"}],
      table = $("table.files", interface).dataTable( $.extend({aoColumns: cols},tableDef) );
  $("table.files,button#new-file", interface).attr("file-type", psi.ftype);
  if(psi.ftype=="data")
    $("input[name=alias]", interface).attr("placeholder", "Name[.xml|*.json]");
  //Crear botón nuevo
  $(".message-close", interface).click(function(){ $(this).parent().hide(); });
  $("button#new-file", interface)
    .click(function(){
      try {
        var ftype = $(this).attr("file-type"), 
            fileName = $(this).siblings("input[name=alias]").val();
        
        if (fileName.length>0 && (fileName.toLowerCase().indexOf(".xml")>0 || fileName.toLowerCase().indexOf(".json")>0) && GrapherApp.current!=null){
          GrapherApp.newFile(ftype, fileName);
          this.table.fnAddData( GrapherApp._rowFile(fileName, ftype!="data") );
          GrapherApp._bindEventsFile(this.table);  
          GrapherApp.editFile(ftype, fileName); 
          this.message.hide();
          fileName.val("");
        }
        else {
          this.message.removeClass("ui-state-error").show();
          var mess = GrapherApp.current==null ? "There is no open project" : "Typing filename *.xml o *.json";
          this.message.find("#text").text( mess ); 
        }
      }
      catch(e) { 
        this.message.addClass("ui-state-error").show();
        this.message.find("#text").text(e.toString()); 
      }
    })
    .each(function(){ 
       this.message = $("div#message", interface); 
       this.table = table; 
    }); 
]]></Script>
</Fragment>

 
  
<Fragment id="sourceSVG">
<Interface><![CDATA[
  <div>
    <nav>
       <button id="source-btn">Refrecar</button>
    </nav>
    <textarea class="text-source"></textarea>
  </div> 
]]></Interface>
<Script arguments="interface, psi"><![CDATA[
  $("#source-btn",interface)
    .button({icons: { primary: "ui-icon-refresh" }})
    .click(function(){ 
       $(this).parent().sibling("textarea").val( GrapherApp.manager.svggen.toSVG() ); 
    });
  interface.find("textarea").val( GrapherApp.manager.svggen.toSVG() );
  interface.toolbar({
    title: "Fuente SVG", 
    width: 800,
    close: function() { 
      //$(this).dialog("destroy");
      $(this).remove();
    }
  }); 
]]></Script>
</Fragment>
  
</Template>